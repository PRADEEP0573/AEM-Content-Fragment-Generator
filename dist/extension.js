/*! For license information please see extension.js.LICENSE.txt */
(()=>{var n={252:(n,e,t)=>{function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}function o(){var n,e,t="function"==typeof Symbol?Symbol:{},r=t.iterator||"@@iterator",i=t.toStringTag||"@@toStringTag";function l(t,r,o,i){var l=r&&r.prototype instanceof s?r:s,d=Object.create(l.prototype);return a(d,"_invoke",function(t,r,o){var a,i,l,s=0,d=o||[],m=!1,p={p:0,n:0,v:n,a:u,f:u.bind(n,4),d:function(e,t){return a=e,i=0,l=n,p.n=t,c}};function u(t,r){for(i=t,l=r,e=0;!m&&s&&!o&&e<d.length;e++){var o,a=d[e],u=p.p,f=a[2];t>3?(o=f===r)&&(l=a[(i=a[4])?5:(i=3,3)],a[4]=a[5]=n):a[0]<=u&&((o=t<2&&u<a[1])?(i=0,p.v=r,p.n=a[1]):u<f&&(o=t<3||a[0]>r||r>f)&&(a[4]=t,a[5]=r,p.n=f,i=0))}if(o||t>1)return c;throw m=!0,r}return function(o,d,f){if(s>1)throw TypeError("Generator is already running");for(m&&1===d&&u(d,f),i=d,l=f;(e=i<2?n:l)||!m;){a||(i?i<3?(i>1&&(p.n=-1),u(i,l)):p.n=l:p.v=l);try{if(s=2,a){if(i||(o="next"),e=a[o]){if(!(e=e.call(a,l)))throw TypeError("iterator result is not an object");if(!e.done)return e;l=e.value,i<2&&(i=0)}else 1===i&&(e=a.return)&&e.call(a),i<2&&(l=TypeError("The iterator does not provide a '"+o+"' method"),i=1);a=n}else if((e=(m=p.n<0)?l:t.call(r,p))!==c)break}catch(e){a=n,i=1,l=e}finally{s=1}}return{value:e,done:m}}}(t,o,i),!0),d}var c={};function s(){}function d(){}function m(){}e=Object.getPrototypeOf;var p=[][r]?e(e([][r]())):(a(e={},r,function(){return this}),e),u=m.prototype=s.prototype=Object.create(p);function f(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,m):(n.__proto__=m,a(n,i,"GeneratorFunction")),n.prototype=Object.create(u),n}return d.prototype=m,a(u,"constructor",m),a(m,"constructor",d),d.displayName="GeneratorFunction",a(m,i,"GeneratorFunction"),a(u),a(u,i,"Generator"),a(u,r,function(){return this}),a(u,"toString",function(){return"[object Generator]"}),(o=function(){return{w:l,m:f}})()}function a(n,e,t,r){var o=Object.defineProperty;try{o({},"",{})}catch(n){o=0}a=function(n,e,t,r){function i(e,t){a(n,e,function(n){return this._invoke(e,t,n)})}e?o?o(n,e,{value:t,enumerable:!r,configurable:!r,writable:!r}):n[e]=t:(i("next",0),i("throw",1),i("return",2))},a(n,e,t,r)}function i(n,e,t,r,o,a,i){try{var l=n[a](i),c=l.value}catch(n){return void t(n)}l.done?e(c):Promise.resolve(c).then(r,o)}function l(n){return function(){var e=this,t=arguments;return new Promise(function(r,o){var a=n.apply(e,t);function l(n){i(a,r,o,l,c,"next",n)}function c(n){i(a,r,o,l,c,"throw",n)}l(void 0)})}}var c=t(398),s=t(928),d=t(896),m=void 0;function p(n){if(!n.name)return{isValid:!1,message:"Model name is required"};if(!/^[a-z0-9-_]+$/i.test(n.name))return{isValid:!1,message:"Model name can only contain letters, numbers, hyphens and underscores"};if(!n.fields||0===n.fields.length)return{isValid:!1,message:"At least one field is required"};var e,t=function(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=function(n,e){if(n){if("string"==typeof n)return r(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?r(n,e):void 0}}(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var o=0,a=function(){};return{s:a,n:function(){return o>=n.length?{done:!0}:{done:!1,value:n[o++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,l=!0,c=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return l=n.done,n},e:function(n){c=!0,i=n},f:function(){try{l||null==t.return||t.return()}finally{if(c)throw i}}}}(n.fields);try{for(t.s();!(e=t.n()).done;){var o=e.value;if(!o.name||!o.type)return{isValid:!1,message:"All fields must have a name and type"};if(!/^[a-z][a-z0-9-_]*$/i.test(o.name))return{isValid:!1,message:"Field name '".concat(o.name,"' must start with a letter and contain only letters, numbers, hyphens or underscores")}}}catch(n){t.e(n)}finally{t.f()}return{isValid:!0}}function u(n,e){return f.apply(this,arguments)}function f(){return(f=l(o().m(function n(e,t){var r,a,i,l,m,p,u,f,v,y,w,h,x,j,E,T;return o().w(function(n){for(;;)switch(n.p=n.n){case 0:if(n.p=0,r=t.fsPath,a=e.name.toLowerCase().replace(/\s+/g,"-"),i=e.projectName||"myproject",l=e.folderName||"CF Folder Name",/^[a-z0-9-]+$/.test(i)){n.n=1;break}return c.window.showErrorMessage("Project name can only contain lowercase letters, numbers, and hyphens"),n.a(2);case 1:if(l&&0!==l.trim().length){n.n=2;break}return c.window.showErrorMessage("Folder name cannot be empty"),n.a(2);case 2:return m=s.join(r,l),p=s.join(m,"settings"),u=s.join(p,"dam"),f=s.join(u,"cfm"),v=s.join(f,"models"),y=s.join(v,a),d.mkdirSync(y,{recursive:!0}),w='<?xml version="1.0" encoding="UTF-8"?>\n<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" \n          xmlns:jcr="http://www.jcp.org/jcr/1.0"\n          jcr:title="'.concat(b(e.name),'"\n          jcr:primaryType="sling:Folder"/>'),h='<?xml version="1.0" encoding="UTF-8"?>\n<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" \n          xmlns:jcr="http://www.jcp.org/jcr/1.0"\n          jcr:primaryType="cq:Page">\n    <'.concat(a,"/>\n</jcr:root>"),x='<?xml version="1.0" encoding="UTF-8"?>\n<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0"\n xmlns:cq="http://www.day.com/jcr/cq/1.0" \n xmlns:jcr="http://www.jcp.org/jcr/1.0" \n xmlns:nt="http://www.jcp.org/jcr/nt/1.0"\n xmlns:granite="http://www.adobe.com/jcr/granite/1.0"\n    jcr:primaryType="cq:Template"\n    allowedPaths="[/content/entities(/.*)?]"\n    ranking="{Long}100">\n    <jcr:content\n        cq:lastModified="{Date}'.concat((new Date).toISOString(),'"\n        cq:lastModifiedBy="{String}admin"\n        cq:scaffolding="/conf/').concat(i,"/settings/dam/cfm/models/").concat(a,'/jcr:content/model"\n        cq:templateType="/libs/settings/dam/cfm/model-types/fragment"\n        jcr:primaryType="cq:PageContent"\n        jcr:title="').concat(b(e.name),'"\n        sling:resourceSuperType="dam/cfm/models/console/components/data/entity"\n        sling:resourceType="dam/cfm/models/console/components/data/entity/default">\n        <model\n            cq:targetPath="/content/entities"\n            jcr:primaryType="cq:PageContent"\n            sling:resourceType="wcm/scaffolding/components/scaffolding"\n            dataTypesConfig="/mnt/overlay/settings/dam/cfm/models/formbuilderconfig/datatypes"\n            maxGeneratedOrder="20">\n            <cq:dialog\n                jcr:primaryType="nt:unstructured"\n                sling:resourceType="cq/gui/components/authoring/dialog">\n                <content\n                    jcr:lastModified="{Date}').concat((new Date).toISOString(),'"\n                    jcr:lastModifiedBy="admin"\n                    jcr:primaryType="nt:unstructured"\n                    sling:resourceType="granite/ui/components/coral/foundation/fixedcolumns">\n                    <items\n                        jcr:primaryType="nt:unstructured"\n                        maxGeneratedOrder="22">\n                        ').concat(g(e.fields),"\n                    </items>\n                </content>\n            </cq:dialog>\n        </model>\n    </jcr:content>\n</jcr:root>"),d.writeFileSync(s.join(m,".content.xml"),w),d.writeFileSync(s.join(p,".content.xml"),'<?xml version="1.0" encoding="UTF-8"?>\n<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" \n          xmlns:jcr="http://www.jcp.org/jcr/1.0"\n          jcr:primaryType="sling:Folder"\n          sling:resourceType="sling:Folder"/>'),d.writeFileSync(s.join(u,".content.xml"),'<?xml version="1.0" encoding="UTF-8"?>\n<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" \n          xmlns:jcr="http://www.jcp.org/jcr/1.0"\n          jcr:primaryType="cq:Page">\n    <cfm/>\n</jcr:root>'),d.writeFileSync(s.join(f,".content.xml"),'<?xml version="1.0" encoding="UTF-8"?>\n<jcr:root xmlns:sling="http://sling.apache.org/jcr/sling/1.0" \n          xmlns:jcr="http://www.jcp.org/jcr/1.0"\n          jcr:primaryType="cq:Page">\n    <models/>\n</jcr:root>'),d.writeFileSync(s.join(v,".content.xml"),h),d.writeFileSync(s.join(y,".content.xml"),x),c.window.showInformationMessage("Content Fragment Model '".concat(e.name,"' created successfully at: ").concat(y)),j=c.Uri.file(s.join(m,".content.xml")),E=c.Uri.file(s.join(y,".content.xml")),n.n=3,c.window.showTextDocument(j);case 3:return n.n=4,c.window.showTextDocument(E,{preview:!1,viewColumn:c.ViewColumn.Beside});case 4:n.n=6;break;case 5:n.p=5,T=n.v,c.window.showErrorMessage("Error creating Content Fragment Model: ".concat(T.message)),console.error("Error in generateContentFragment:",T);case 6:return n.a(2)}},n,null,[[0,5]])}))).apply(this,arguments)}function g(n){return n.map(function(n,e){var t="_x003".concat(e,"_").concat(Date.now()),r=['jcr:primaryType="nt:unstructured"','fieldLabel="'.concat(b(n.label||n.name),'"'),'fieldDescription="'.concat(b(n.description||""),'"'),'name="'.concat(b(n.name),'"'),'listOrder="'.concat(e+1,'"'),'metaType="'.concat(n.type,'"'),'renderReadOnly="false"','showEmptyInReadOnly="true"','required="'.concat(n.required?"on":"off",'"')],o=[].concat(r);switch(n.type){case"text-single":o.push('sling:resourceType="granite/ui/components/coral/foundation/form/textfield"','emptyText="'.concat(b(n.placeholder||""),'"'),'maxlength="'.concat(n.maxLength||"255",'"'),'valueType="string"','value="'.concat(b(n.value||""),'"'));break;case"text-multi":o.push('sling:resourceType="dam/cfm/admin/components/authoring/contenteditor/multieditor"','default-mime-type="text/html"','valueType="string"');break;case"number":o.push('sling:resourceType="granite/ui/components/coral/foundation/form/numberfield"','emptyText="'.concat(b(n.placeholder||""),'"'),'step="'.concat(n.step||"1",'"'),'typeHint="'.concat(n.numberType||"long",'"'),'valueType="'.concat(n.numberType||"long",'"'),'value="'.concat(n.value||"0",'"'));break;case"boolean":o.push('sling:resourceType="granite/ui/components/coral/foundation/form/checkbox"','checked="{Boolean}'.concat(n.checked||"false",'"'),'text="'.concat(b(n.text||n.label||n.name),'"'),'valueType="boolean"');break;case"date":return o.push('sling:resourceType="granite/ui/components/coral/foundation/form/datepicker"','displayedFormat="YYYY-MM-DD HH:mm"','emptyText="YYYY-MM-DD HH:mm"','type="datetime"','valueFormat="YYYY-MM-DD[T]HH:mm:ss.000Z"','valueType="calendar"','value="'.concat(n.value?"{Date}".concat(n.value):"",'"'),">",'<granite:data jcr:primaryType="nt:unstructured" typeHint="Date"/>'),"<".concat(t," ").concat(o.join(" "),"</").concat(t,">");case"enumeration":return o.push('sling:resourceType="granite/ui/components/coral/foundation/form/select"','emptyOption="{Boolean}true"','options="'.concat(b(n.options?n.options.join(","):"Option 1,Option 2"),'"'),'valueType="string"',">",'<datasource jcr:primaryType="nt:unstructured"','sling:resourceType="dam/cfm/admin/components/datasources/optionrenderer"','variant="default"/>'),"<".concat(t," ").concat(o.join(" "),"</").concat(t,">");default:o.push('sling:resourceType="granite/ui/components/coral/foundation/form/textfield"','valueType="string"')}return"<".concat(t," ").concat(o.join(" "),"/>")}).join("\n        ")}function v(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],r=arguments.length>3?arguments[3]:void 0,o=n.map(function(n){return'<option value="'.concat(n.value,'">').concat(n.label,"</option>")}).join("\n"),a=e.map(function(n){return'<option value="'.concat(n.value,'">').concat(n.label,"</option>")}).join("\n"),i=t.map(function(t,r){return function(n,e,t,r){var o=n.options?n.options.join(", "):"";return'\n        <div class="field-row" data-index="'.concat(e,'" ').concat(n.options?'data-options="'+y(o)+'"':"",'>\n            <input type="text" \n                   class="field-name" \n                   value="').concat(y(n.name||""),'" \n                   placeholder="Field name" \n                   required />\n            <select class="field-type">\n                ').concat(t.map(function(e){return'\n                    <option value="'.concat(e.value,'" \n                            ').concat(e.value===(n.type||"")?"selected":"",">\n                        ").concat(e.label,"\n                    </option>\n                ")}).join(""),"\n            </select>\n            ").concat("enumeration"===n.type?'\n                <div class="field-options-container">\n                    <label>Options (comma separated)</label>\n                    <input type="text" \n                           class="field-options" \n                           value="'.concat(y(o),'" \n                           placeholder="Option 1, Option 2, Option 3" />\n                </div>\n            '):"",'\n            <select class="field-validation">\n                ').concat(r.map(function(e){return'\n                    <option value="'.concat(e.value,'" \n                            ').concat(e.value===(n.validation||"")?"selected":"",">\n                        ").concat(e.label,"\n                    </option>\n                ")}).join(""),'\n            </select>\n            <input type="text" \n                   class="field-default" \n                   value="').concat(y(n.defaultValue||""),'" \n                   placeholder="Default value" />\n            <button type="button" \n                    class="btn btn-remove remove-field" \n                    title="Remove field">\n                Remove\n            </button>\n        </div>\n    ')}(t,r,n,e)}).join("");return'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>AEM Content Fragment Builder</title>\n    <style>\n        /* Modern Color Scheme */\n        :root {\n            --primary: #7c3aed;\n            --primary-light: #a78bfa;\n            --secondary: #10b981;\n            --accent: #f59e0b;\n            --danger: #ef4444;\n            --success: #10b981;\n            --text: #1f2937;\n            --text-light: #6b7280;\n            --bg: #f9fafb;\n            --card-bg: #ffffff;\n            --border: #e5e7eb;\n            \n            /* Spacing */\n            --spacing-xs: 4px;\n            --spacing-sm: 8px;\n            --spacing-md: 16px;\n            --spacing-lg: 24px;\n            --spacing-xl: 32px;\n            \n            /* Border Radius */\n            --radius-sm: 4px;\n            --radius-md: 8px;\n            --radius-lg: 12px;\n            \n            /* Shadows */\n            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n            \n            /* Transitions */\n            --transition-fast: all 0.15s ease-in-out;\n            --transition-normal: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n            --transition-slow: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n\n        /* Base Styles */\n        body {\n            font-family: \'Inter\', -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;\n            font-size: 14px;\n            line-height: 1.6;\n            color: var(--text);\n            background: url(\''.concat(r,'\') no-repeat center center fixed;\n            background-size: cover;\n            background-color: #f9fafb;\n            margin: 0;\n            padding: 0;\n            min-height: 100vh;\n            -webkit-font-smoothing: antialiased;\n            -moz-osx-font-smoothing: grayscale;\n        }\n\n        /* Container */\n        .container {\n            max-width: 1000px;\n            margin: 0 auto;\n            padding: var(--spacing-xl);\n            animation: fadeIn 0.6s ease-out;\n        }\n\n        /* Card */\n        .card {\n            background: var(--card-bg);\n            border-radius: var(--radius-lg);\n            box-shadow: var(--shadow-lg);\n            padding: var(--spacing-xl);\n            margin-bottom: var(--spacing-xl);\n            border: 1px solid var(--border);\n            transition: var(--transition-normal);\n        }\n\n        .card:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n        }\n\n        /* Form Elements */\n        .form-group {\n            margin-bottom: var(--spacing-lg);\n        }\n\n        label {\n            display: block;\n            margin-bottom: var(--spacing-sm);\n            font-weight: 600;\n            color: var(--text);\n            font-size: 13px;\n            text-transform: uppercase;\n            letter-spacing: 0.05em;\n        }\n\n        input[type="text"],\n        select {\n            width: 100%;\n            padding: 10px 12px;\n            background-color: var(--card-bg);\n            color: var(--text);\n            border: 2px solid var(--border);\n            border-radius: var(--radius-md);\n            font-family: inherit;\n            font-size: 14px;\n            transition: var(--transition-fast);\n        }\n\n        input[type="text"]:focus,\n        select:focus {\n            outline: none;\n            border-color: var(--primary);\n            box-shadow: 0 0 0 3px rgba(124, 58, 237, 0.1);\n        }\n\n        /* Buttons */\n        .btn {\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            padding: 10px 16px;\n            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-light) 100%);\n            color: white;\n            border: none;\n            border-radius: var(--radius-md);\n            cursor: pointer;\n            font-family: inherit;\n            font-size: 14px;\n            font-weight: 500;\n            transition: var(--transition-normal);\n            box-shadow: var(--shadow-sm);\n        }\n\n        .btn:hover {\n            transform: translateY(-1px);\n            box-shadow: var(--shadow-md);\n            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-light) 100%);\n        }\n\n        .btn:active {\n            transform: translateY(0);\n        }\n\n        .btn-remove {\n            background: linear-gradient(135deg, #ef4444 0%, #f87171 100%);\n        }\n\n        .btn-secondary {\n            background: var(--bg);\n            color: var(--text);\n            border: 1px solid var(--border);\n        }\n\n        /* Field Rows */\n        .field-row {\n            display: flex;\n            align-items: center;\n            gap: var(--spacing-md);\n            margin-bottom: var(--spacing-sm);\n            padding: var(--spacing-md);\n            background: var(--card-bg);\n            border-radius: var(--radius-md);\n            border: 1px solid var(--border);\n            transition: var(--transition-normal);\n            animation: slideIn 0.3s ease-out;\n        }\n\n        .field-row:hover {\n            border-color: var(--primary);\n            box-shadow: var(--shadow-sm);\n        }\n\n        .field-name { flex: 2; }\n        .field-type { flex: 2; }\n        .field-validation { flex: 1.5; }\n        .field-default { flex: 1.5; }\n\n        /* Error Message */\n        #error-message {\n            color: #b91c1c;\n            background-color: #fef2f2;\n            border-left: 4px solid #dc2626;\n            padding: 12px 16px;\n            margin: 0 0 24px 0;\n            border-radius: 4px;\n            display: none;\n            font-size: 14px;\n            line-height: 1.5;\n            animation: fadeIn 0.3s ease-out;\n        }\n\n        /* Preview Section */\n        #preview-container {\n            margin-top: var(--spacing-xl);\n            display: none;\n            animation: fadeIn 0.6s ease-out;\n        }\n\n        #preview-content {\n            background: var(--bg);\n            padding: var(--spacing-lg);\n            border-radius: var(--radius-md);\n            max-height: 400px;\n            overflow: auto;\n            white-space: pre-wrap;\n            font-family: \'Fira Code\', \'Courier New\', monospace;\n            font-size: 13px;\n            line-height: 1.5;\n            border: 1px solid var(--border);\n        }\n\n        /* Animations */\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(10px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n\n        @keyframes slideIn {\n            from { opacity: 0; transform: translateX(-10px); }\n            to { opacity: 1; transform: translateX(0); }\n        }\n\n        /* Utility Classes */\n        .flex {\n            display: flex;\n            gap: var(--spacing-md);\n        }\n\n        .items-center {\n            align-items: center;\n        }\n\n        .justify-between {\n            justify-content: space-between;\n        }\n\n        .mt-4 { margin-top: var(--spacing-md); }\n        .mb-4 { margin-bottom: var(--spacing-md); }\n        .p-4 { padding: var(--spacing-md); }\n\n        /* Responsive Design */\n        @media (max-width: 768px) {\n            :root {\n                --spacing-md: 12px;\n                --spacing-lg: 16px;\n                --spacing-xl: 20px;\n            }\n\n            .container {\n                padding: var(--spacing-md);\n            }\n\n            .form-row {\n                flex-direction: column;\n                gap: var(--spacing-md);\n            }\n\n            .field-row {\n                flex-direction: column;\n                gap: var(--spacing-sm);\n                padding: var(--spacing-md);\n            }\n\n            .field-name,\n            .field-type,\n            .field-validation,\n            .field-default,\n            .field-options-container {\n                width: 100%;\n            }\n\n            .form-actions {\n                flex-direction: column;\n                gap: var(--spacing-sm);\n            }\n\n            .btn {\n                width: 100%;\n                padding: 12px;\n            }\n\n            #preview-content {\n                max-height: 300px;\n                font-size: 12px;\n                padding: var(--spacing-md);\n            }\n        }\n\n        @media (max-width: 480px) {\n            :root {\n                --spacing-sm: 6px;\n                --spacing-md: 10px;\n                --spacing-lg: 14px;\n            }\n\n            .card {\n                padding: var(--spacing-lg);\n                margin-bottom: var(--spacing-lg);\n            }\n\n            h1 {\n                font-size: 1.5rem;\n                margin-bottom: var(--spacing-lg);\n            }\n\n            label {\n                font-size: 12px;\n                margin-bottom: 4px;\n            }\n\n            input[type="text"],\n            select {\n                padding: 8px 10px;\n                font-size: 13px;\n            }\n        }\n    </style>\n    <body>\n        <div class="container">\n            <h1>AEM Content Fragment Generator</h1>\n            <div id="error-message" role="alert"></div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label for="projectName">Project Name</label>\n                    <input type="text" \n                           id="projectName" \n                           placeholder="Enter Current Project Name" \n                           value=""\n                           class="form-control" required />\n                </div>\n            </div>  \n            <div class="form-row">\n                <div class="form-group">\n                    <label for="folderName">CF Folder Name</label>\n                    <input type="text" \n                           id="folderName" \n                           placeholder="Enter CF Folder Name" \n                           value=""\n                           class="form-control" required />\n                </div>\n            </div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label for="modelName">Model Name</label>\n                    <input type="text" \n                           id="modelName" \n                           placeholder="Enter CF Model Name" \n                           class="form-control" required />\n                </div>\n            </div>\n            \n            <div class="form-group">\n                <div class="form-group-header">\n                    <label>Fields</label>\n                    <button id="add-field" class="btn">+ Add Field</button>\n                </div>\n                <div id="fields-container">\n                    ').concat(i,'\n                </div>\n            </div>\n            \n            <div class="form-actions">\n                <button id="preview" class="btn">Preview</button>\n                <button id="generate" class="btn btn-primary">Generate</button>\n            </div>\n            \n            <div id="preview-container">\n                <h3>Preview</h3>\n                <pre id="preview-content"></pre>\n            </div>\n        </div>\n\n        <script>\n            const vscode = acquireVsCodeApi();\n            let fieldCounter = ').concat(t.length,";\n            \n            // Add new field\n            document.getElementById('add-field').addEventListener('click', addNewField);\n            \n            // Handle field type change\n            document.addEventListener('change', (e) => {\n                if (e.target.classList.contains('field-type')) {\n                    const fieldRow = e.target.closest('.field-row');\n                    const optionsContainer = fieldRow.querySelector('.field-options-container');\n                    \n                    if (e.target.value === 'enumeration') {\n                        if (!optionsContainer) {\n                            const optionsInput = document.createElement('input');\n                            optionsInput.type = 'text';\n                            optionsInput.className = 'field-options';\n                            optionsInput.placeholder = 'Option 1, Option 2, Option 3';\n                            optionsInput.value = fieldRow.dataset.options || '';\n                            \n                            const container = document.createElement('div');\n                            container.className = 'field-options-container';\n                            const label = document.createElement('label');\n                            label.textContent = 'Options (comma separated)';\n                            container.appendChild(label);\n                            container.appendChild(optionsInput);\n                            \n                            const validationSelect = fieldRow.querySelector('.field-validation');\n                            fieldRow.insertBefore(container, validationSelect.nextSibling);\n                        }\n                    } else if (optionsContainer) {\n                        optionsContainer.remove();\n                    }\n                }\n            });\n            \n            // Remove field\n            document.addEventListener('click', (e) => {\n                if (e.target.classList.contains('remove-field')) {\n                    e.target.closest('.field-row').remove();\n                }\n            });\n            \n            // Preview button\n            document.getElementById('preview').addEventListener('click', () => {\n                const modelData = getModelData();\n                if (modelData) {\n                    document.getElementById('preview-content').textContent = \n                        JSON.stringify(modelData, null, 2);\n                    document.getElementById('preview-container').style.display = 'block';\n                    \n                    // Post message to extension for any additional processing\n                    vscode.postMessage({\n                        command: 'preview',\n                        data: modelData\n                    });\n                }\n            });\n            \n            // Generate button\n            document.getElementById('generate').addEventListener('click', generateModel);\n            \n            // Handle keyboard shortcuts\n            document.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n                    e.preventDefault();\n                    generateModel();\n                }\n            });\n\n            // Handle validation responses\n            window.addEventListener('message', handleMessage);\n\n            function addNewField() {\n                const fieldRow = document.createElement('div');\n                fieldRow.className = 'field-row';\n                fieldRow.dataset.index = fieldCounter++;\n                fieldRow.innerHTML = `\n                    <input type=\"text\" \n                           class=\"field-name\" \n                           placeholder=\"Field name\" \n                           required />\n                    <select class=\"field-type\">\n                        ").concat(o,'\n                    </select>\n                    <select class="field-validation">\n                        ').concat(a,"\n                    </select>\n                    <input type=\"text\" \n                           class=\"field-default\" \n                           placeholder=\"Default value\" />\n                    <button type=\"button\" \n                            class=\"btn btn-remove remove-field\" \n                            title=\"Remove field\">\n                        Remove\n                    </button>\n                `;\n                document.getElementById('fields-container').appendChild(fieldRow);\n                fieldRow.querySelector('.field-name').focus();\n            }\n\n            function generateModel() {\n                const modelData = getModelData();\n                if (modelData) {\n                    vscode.postMessage({\n                        command: 'validate',\n                        data: modelData\n                    });\n                }\n            }\n\n            function handleMessage(event) {\n                const message = event.data;\n                const errorEl = document.getElementById('error-message');\n                \n                switch (message.command) {\n                    case 'validationError':\n                        errorEl.textContent = message.message;\n                        errorEl.style.display = 'block';\n                        errorEl.scrollIntoView({ behavior: 'smooth' });\n                        break;\n                        \n                    case 'validationSuccess':\n                        errorEl.style.display = 'none';\n                        vscode.postMessage({\n                            command: 'generate',\n                            data: getModelData()\n                        });\n                        break;\n                }\n            }\n\n            function validateForm() {\n                const projectName = document.getElementById('projectName').value.trim();\n                const folderName = document.getElementById('folderName').value.trim();\n                const modelName = document.getElementById('modelName').value.trim();\n                \n                // Reset error state\n                document.getElementById('error-message').style.display = 'none';\n                \n                // Validate project name\n                if (!projectName) {\n                    showError('Project name is required');\n                    document.getElementById('projectName').focus();\n                    return false;\n                }\n                \n                if (!/^[a-z0-9-]+$/.test(projectName)) {\n                    showError('Project name can only contain lowercase letters, numbers, and hyphens');\n                    document.getElementById('projectName').focus();\n                    return false;\n                }\n                \n                // Validate folder name\n                if (!folderName) {\n                    showError('Folder name is required');\n                    document.getElementById('folderName').focus();\n                    return false;\n                }\n                \n                // Validate model name\n                if (!modelName) {\n                    showError('Model name is required');\n                    document.getElementById('modelName').focus();\n                    return false;\n                }\n                \n                return true;\n            }\n\n            function getModelData() {\n                if (!validateForm()) {\n                    return null;\n                }\n                \n                const modelName = document.getElementById('modelName').value.trim();\n                const projectName = document.getElementById('projectName').value.trim();\n                const folderName = document.getElementById('folderName').value.trim();\n                \n                const fields = Array.from(document.querySelectorAll('.field-row'))\n                    .map(row => {\n                        const name = row.querySelector('.field-name').value.trim();\n                        const type = row.querySelector('.field-type').value;\n                        const validation = row.querySelector('.field-validation').value;\n                        const defaultValue = row.querySelector('.field-default').value.trim();\n                        const optionsInput = row.querySelector('.field-options');\n                        const options = optionsInput ? optionsInput.value.split(',').map(opt => opt.trim()).filter(opt => opt) : [];\n                        \n                        const field = { \n                            name, \n                            type, \n                            validation, \n                            defaultValue,\n                            ...(type === 'enumeration' && { options })\n                        };\n                        \n                        return field;\n                    })\n                    .filter(field => field.name && field.type);\n\n                if (fields.length === 0) {\n                    showError('At least one field is required');\n                    return null;\n                }\n\n                return {\n                    name: modelName,\n                    projectName,\n                    folderName,\n                    fields\n                };\n            }\n\n            function showError(message) {\n                const errorEl = document.getElementById('error-message');\n                errorEl.textContent = message;\n                errorEl.style.display = 'block';\n                errorEl.scrollIntoView({ behavior: 'smooth' });\n            }\n        <\/script>\n    </body>\n</html>")}function y(n){return n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function b(n){return n?n.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"):""}function w(n){m&&m.webview.postMessage({command:"updatePreview",data:JSON.stringify(n,null,2)})}n.exports={activate:function(n){var e=c.commands.registerCommand("aem-cf-builder.createModel",function(){var e=l(o().m(function e(t){var r,a,i,d,f;return o().w(function(e){for(;;)switch(e.n){case 0:if(t){e.n=1;break}return c.window.showErrorMessage("Please right-click on a folder in the Explorer to use this command"),e.a(2);case 1:r=c.workspace.getConfiguration("aemCfGenerator"),a=r.get("fieldTypes",[{label:"Single Line Text",value:"text-single"},{label:"Multi-line Text",value:"text-multi"},{label:"Number",value:"number"},{label:"Boolean",value:"boolean"},{label:"Date/Time",value:"datetime"},{label:"Enumeration",value:"enumeration"}]),i=r.get("validationTypes",[{label:"Required",value:"required"},{label:"Optional",value:"optional"}]),d=r.get("defaultFields",[]),m=c.window.createWebviewPanel("aemCfBuilder","AEM Content Fragment Builder",c.ViewColumn.Beside,{enableScripts:!0,retainContextWhenHidden:!0,localResourceRoots:[c.Uri.file(s.join(n.extensionPath,"images")),c.Uri.file(s.join(n.extensionPath,"media"))]}),f=m.webview.asWebviewUri(c.Uri.file(s.join(n.extensionPath,"images","PADDE.png"))),m.webview.html=v(a,i,d,f),m.webview.onDidReceiveMessage(function(){var n=l(o().m(function n(e){var r,a,i;return o().w(function(n){for(;;)switch(n.p=n.n){case 0:n.p=0,a=e.command,n.n="generate"===a?1:"preview"===a?3:"validate"===a?4:5;break;case 1:return n.n=2,u(e.data,t);case 2:return n.a(3,6);case 3:return w(e.data),n.a(3,6);case 4:return(r=p(e.data)).isValid?m.webview.postMessage({command:"validationSuccess"}):m.webview.postMessage({command:"validationError",message:r.message}),n.a(3,6);case 5:console.warn("Unknown message command:",e.command);case 6:n.n=8;break;case 7:n.p=7,i=n.v,c.window.showErrorMessage("Error: ".concat(i.message)),console.error(i);case 8:return n.a(2)}},n,null,[[0,7]])}));return function(e){return n.apply(this,arguments)}}(),void 0,n.subscriptions),m.onDidDispose(function(){m=void 0},null,n.subscriptions);case 2:return e.a(2)}},e)}));return function(n){return e.apply(this,arguments)}}());n.subscriptions.push(e)},deactivate:function(){}}},398:n=>{"use strict";n.exports=require("vscode")},896:n=>{"use strict";n.exports=require("fs")},928:n=>{"use strict";n.exports=require("path")}},e={},t=function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={exports:{}};return n[r](a,a.exports,t),a.exports}(252);module.exports=t})();